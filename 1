Analisando seu código, identifiquei vários problemas que estão impedindo o funcionamento correto do botão de consulta e exibição da tabela:

Problemas Identificados:
1. HTML - IDs Duplicados
html
<!-- ID duplicado - ambos elementos têm id="tabela-clientes" -->
<div id="tabela-clientes">
<tbody id="tabela-clientes">
2. JavaScript - Função consultarClientes()
A função não está alternando entre as seções

A tabela está sendo preenchida incorretamente

Faltam colunas na tabela HTML vs dados retornados

3. CSS - Seção oculta
css
#lista-clientes {
    display: none; /* Isso mantém a seção sempre oculta */
}
Soluções:
1. Corrija o HTML:
html
<!-- Mude o ID do div para evitar duplicação -->
<div id="container-tabela">
    <table>
        <thead>
            <tr>
                <th>Código</th>
                <th>Nome</th>
                <th>Idade</th>
                <th>Telefone</th>
                <th>Nº Emergência</th> <!-- Adicionei esta coluna -->
                <th>Endereço</th> <!-- Adicionei esta coluna -->
                <th>E-mail</th> <!-- Adicionei esta coluna -->
                <th>CPF</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody id="tabela-clientes">
            <!-- Linhas serão preenchidas pelo JavaScript -->
        </tbody>
    </table>
</div>
2. Corrija a função consultarClientes():
javascript
async function consultarClientes() {
    const cpf = document.getElementById('cpf').value.trim();

    let url = '/clientes';
    if (cpf) {
        url += `?cpf=${cpf}`;
    }

    try {
        const response = await fetch(url);
        const clientes = await response.json();

        const tabelaBody = document.getElementById('tabela-clientes');
        tabelaBody.innerHTML = ''; // Limpa a tabela

        if (clientes.length === 0) {
            tabelaBody.innerHTML = '<tr><td colspan="9">Nenhum cliente encontrado.</td></tr>';
        } else {
            clientes.forEach(cliente => {
                const linha = document.createElement('tr');
                linha.innerHTML = `
                    <td>${cliente.codigo || ''}</td>
                    <td>${cliente.nome || ''}</td>
                    <td>${cliente.idade || ''}</td>
                    <td>${cliente.telefone || ''}</td>
                    <td>${cliente.emergencia || ''}</td>
                    <td>${cliente.endereco || ''}</td>
                    <td>${cliente.email || ''}</td>
                    <td>${cliente.cpf || ''}</td>
                    <td>
                        <button onclick="editarCliente('${cliente.cpf}')">Editar</button>
                        <button onclick="excluirCliente('${cliente.cpf}')">Excluir</button>
                    </td>
                `;
                tabelaBody.appendChild(linha);
            });
        }

        // Mostra a seção da tabela e esconde o formulário
        document.getElementById('main-container').style.display = 'none';
        document.getElementById('lista-clientes').style.display = 'block';

    } catch (error) {
        console.error('Erro ao listar clientes:', error);
        alert('Erro ao carregar clientes.');
    }
}

// Função para voltar ao formulário
function voltarParaCadastro() {
    document.getElementById('main-container').style.display = 'block';
    document.getElementById('lista-clientes').style.display = 'none';
}
3. Adicione estas funções auxiliares:
javascript
// Função para editar cliente (preenche o formulário)
function editarCliente(cpf) {
    // Implemente a lógica para buscar o cliente pelo CPF
    // e preencher o formulário para edição
    alert('Editar cliente com CPF: ' + cpf);
}

// Função para excluir cliente
async function excluirCliente(cpf) {
    if (confirm('Tem certeza que deseja excluir este cliente?')) {
        try {
            const response = await fetch(`/clientes/cpf/${cpf}`, {
                method: 'DELETE'
            });
            
            if (response.ok) {
                alert('Cliente excluído com sucesso!');
                consultarClientes(); // Recarrega a lista
            } else {
                alert('Erro ao excluir cliente.');
            }
        } catch (error) {
            console.error('Erro ao excluir cliente:', error);
            alert('Erro ao excluir cliente.');
        }
    }
}
4. Adicione a rota DELETE no servidor:
javascript
// Excluir cliente
app.delete("/clientes/cpf/:cpf", (req, res) => {
    const { cpf } = req.params;

    const query = `DELETE FROM clientes WHERE cpf = ?`;
    db.run(query, [cpf], function (err) {
        if (err) {
            return res.status(500).send("Erro ao excluir cliente.");
        }
        if (this.changes === 0) {
            return res.status(404).send("Cliente não encontrado.");
        }
        res.send("Cliente excluído com sucesso.");
    });
});
5. Corrija a função limparFormulario():
javascript
function limparFormulario() {
    document.getElementById('formCliente').reset();
}
